name: Push and Apply to AWS Env

on:
  workflow_call:
    inputs:
      environment:
        description: "AWS Env to push changes too"
        type: string 
        required: true
        default: 'dev'



jobs:
  push-image:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Push FE Image to ECR
      env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      run: |
        aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.us-east-2.amazonaws.com
        docker build --compress -t ${{vars.ECR_FRONT_REPO_APP}}:${{inputs.environment}}-$GITHUB_SHA frontend
        docker push ${{vars.ECR_FRONT_REPO_APP}}:${{inputs.environment}}-$GITHUB_SHA

    - name: Push BE Image to ECR
      env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        TF_VAR_db_password: ${{secrets.TF_VAR_DB_PASSWORD}}

      run: |
        aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.us-east-2.amazonaws.com
        docker build --compress -t ${{vars.ECR_BACK_REPO_APP}}:${{inputs.environment}}-$GITHUB_SHA backend
        docker push ${{vars.ECR_BACK_REPO_APP}}:${{inputs.environment}}-$GITHUB_SHA

  apply-terraform:
    needs: ["push-image"]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
  
    - name: Deploy terraform 
      env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      run: |
          cd infra/
          docker compose run --rm terraform -chdir=deploy init
          docker compose run --rm terraform -chdir=deploy workspace select -or-create ${{inputs.environment}}
          docker compose run --rm terraform -chdir=deploy apply -auto-approve -var "ecr_frontend_app_image=${{vars.ECR_FRONT_REPO_APP}}:${{inputs.environment}}-$GITHUB_SHA" -var "ecr_backend_app_image=${{vars.ECR_BACK_REPO_APP}}:${{inputs.environment}}-$GITHUB_SHA" -var "db_password=${{secrets.TF_VAR_DB_PASSWORD}}" -var "db_username=cicd"
