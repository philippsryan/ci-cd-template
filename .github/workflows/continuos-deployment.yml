name: Continuos Deployment

on:
  workflow_call


jobs:
  deploy-dev:
    name: Deploy To Development Environment
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Push FE Image to ECR
      env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      run: |
        aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.us-east-2.amazonaws.com
        docker build --compress -t ${{vars.ECR_FRONT_REPO_APP}}:dev-$GITHUB_SHA frontend
        docker push ${{vars.ECR_FRONT_REPO_APP}}:dev-$GITHUB_SHA

    - name: Push BE Image to ECR
      env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        TF_VAR_db_password: ${{secrets.TF_VAR_DB_PASSWORD}}

      run: |
        aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.us-east-2.amazonaws.com
        docker build --compress -t ${{vars.ECR_BACK_REPO_APP}}:dev-$GITHUB_SHA backend
        docker push ${{vars.ECR_BACK_REPO_APP}}:dev-$GITHUB_SHA

  deploy-prod:
    name: Deploy to production environment
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Push FE Image to ECR
      env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      run: |
        aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.us-east-2.amazonaws.com
        docker build --compress -t ${{vars.ECR_FRONT_REPO_APP}}:dev-$GITHUB_SHA frontend
        docker push ${{vars.ECR_FRONT_REPO_APP}}:dev-$GITHUB_SHA

    - name: Push BE Image to ECR
      env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        TF_VAR_db_password: ${{secrets.TF_VAR_DB_PASSWORD}}

      run: |
        aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.us-east-2.amazonaws.com
        docker build --compress -t ${{vars.ECR_BACK_REPO_APP}}:prod-$GITHUB_SHA backend
        docker push ${{vars.ECR_BACK_REPO_APP}}:prod-$GITHUB_SHA


    terraform-dev:
      name: Apply dev terraform
      steps:
       - name: Checkout
         uses: actions/checkout@v4
  
       - name: Deploy terraform 
         env:
           AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
           AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
         run: |
             cd infra/
             docker compose run --rm terraform -chdir=deploy init
             docker compose run --rm terraform -chdir=deploy workspace select -or-create ${{github.event.inputs.environment}}
             docker compose run --rm terraform -chdir=deploy apply -auto-approve -var "ecr_frontend_app_image=${{vars.ECR_FRONT_REPO_APP}}:dev-$GITHUB_SHA" -var "ecr_backend_app_image=${{vars.ECR_BACK_REPO_APP}}:dev-$GITHUB_SHA" -var "db_password=${{secrets.TF_VAR_DB_PASSWORD}}" -var "db_username=cicd"
